if not game:IsLoaded() then repeat game.Loaded:Wait() until game:IsLoaded() end

function check11()
  return game:GetService("Players").LocalPlayer.PlayerGui.Main.InCombat.Visible and game:GetService("Players").LocalPlayer.PlayerGui.Main.InCombat.Text and (string.find(string.lower(game:GetService("Players").LocalPlayer.PlayerGui.Main.InCombat.Text),"risk"))
end
function getPortal(check2)
   local check3 = check2.Position
   local w = game.PlaceId
   if w == 2753915549 then
      gQ = {
         Vector3.new(-7894.6201171875, 5545.49169921875, -380.246346191406),
         Vector3.new(-4607.82275390625, 872.5422973632812, -1667.556884765625),
         Vector3.new(61163.8515625, 11.759522438049316, 1819.7841796875),
         Vector3.new(3876.280517578125, 35.10614013671875, -1939.3201904296875)
      }
   elseif w == 4442272183 then
      gQ = {
         Vector3.new(-288.46246337890625, 306.130615234375, 597.9988403320312),
         Vector3.new(2284.912109375, 15.152046203613281, 905.48291015625),
         Vector3.new(923.21252441406, 126.9760055542, 32852.83203125),
         Vector3.new(-6508.5581054688, 89.034996032715, -132.83953857422)
      }
   elseif w == 7449423635 then
      gQ = {
         Vector3.new(-5058.77490234375, 314.5155029296875, -3155.88330078125),
         Vector3.new(5756.83740234375, 610.4240112304688, -253.9253692626953),
         Vector3.new(-12463.8740234375, 374.9144592285156, -7523.77392578125),
         Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586),
         Vector3.new(-11993.580078125, 334.7812805175781, -8844.1826171875),
         Vector3.new(5314.58203125, 25.419387817382812, -125.94227600097656)
      }
   end
   local aM, aN = Vector3.new(0,0,0), math.huge

   for _, aL in pairs(gQ) do
      if (aL-check3).Magnitude < aN and (aL-check3).Magnitude < (lp:DistanceFromCharacter(aL) + 300) and aM ~= aL then
         aM, aN = aL,  (aL-check3).Magnitude
      end
   end
   return aM
end

function cancel()
  pcall(function
    ()
    
    
    sexroblox:Cancel()
    end)
   
end

function grgrgrgrg(aE)
pcall(function()
   game.Players.LocalPlayer.Character.Humanoid.Health = 0
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = aE
   wait(1)
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = aE
   game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetSpawnPoint") 
   end)
end

function giunhabatman()
  pcall(function()
   for a, b in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
      if b:IsA"BasePart" then
         b.CanCollide = false
      end
   end
   if not game.Players.LocalPlayer.Character.Head:FindFirstChild"eltrul" then
      local ngu = Instance.new("BodyVelocity", lp.Character.Head)
      ngu.Name = "eltrul"
      ngu.MaxForce = Vector3.new(0,math.huge,0)
      ngu.Velocity = Vector3.new(0,0,0)
   end
end)
end

function check11()
  return game:GetService("Players").LocalPlayer.PlayerGui.Main.InCombat.Visible and game:GetService("Players").LocalPlayer.PlayerGui.Main.InCombat.Text and (string.find(string.lower(game:GetService("Players").LocalPlayer.PlayerGui.Main.InCombat.Text),"risk"))
end
function Tweento(position)
  
   if not lp.Character:FindFirstChild"Head" then
      repeat wait()
      until lp.Character:FindFirstChild"Head"
   end
    for a, b in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
      if b:IsA"BasePart" then
         b.CanCollide = false
      end
   end
   if not game.Players.LocalPlayer.Character.Head:FindFirstChild"eltrul" then
      local ngu = Instance.new("BodyVelocity", lp.Character.Head)
      ngu.Name = "eltrul"
      ngu.MaxForce = Vector3.new(0,math.huge,0)
      ngu.Velocity = Vector3.new(0,0,0)
   end
   local aaaaaaa = lp:DistanceFromCharacter(position.Position)
   if aaaaaaa < 150 then
      pcall(function () sexroblox:Cancel() end)
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = position
      
   end
   
  -- local aH, aI = getSpawn(position), getPortal(position)

   local aH, aI = getSpawn(position), getPortal(position)
   if not check11() and disnoy(aI, aH.Position) > 850 and disnoy(position.Position, aH.Position) < disnoy(game.Players.LocalPlayer.Character:GetPrimaryPartCFrame().p,position.Position) and disnoy(game.Players.LocalPlayer.Character:GetPrimaryPartCFrame().p, aH.Position) > 3500 and disnoy(game.Players.LocalPlayer.Character:GetPrimaryPartCFrame().p,aI) > 1500 and game.Players.LocalPlayer:DistanceFromCharacter(position.Position) > 1200 and resetable() then
        cancel()
         grgrgrgrg(aH)
     
      --game.Players.LocalPlayer.Character:FindFirstChild"Head" 

   elseif disnoy(position.Position, aI) < disnoy(game.Players.LocalPlayer.Character:GetPrimaryPartCFrame().p,position.Position) and disnoy(game.Players.LocalPlayer.Character:GetPrimaryPartCFrame().p,aI) > 450 then 
     cancel()
      request(aI) 
    
      end
   
   local bbbbbbbbb = aaaaaaa/320
   
  sexroblox = game:GetService("TweenService"):Create(lp.Character.HumanoidRootPart,TweenInfo.new(bbbbbbbbb, Enum.EasingStyle.Linear),{CFrame = position})

   sexroblox:Play()
   return sexroblox
end

function Buso()
               if (not (game.Players.LocalPlayer.Character:FindFirstChild("HasBuso"))) then
                  local rel = game.ReplicatedStorage

                  rel.Remotes.CommF_:InvokeServer("Buso")
               end
            end

function CheckDoubleQuest()
    local a = {}
    for r, v in pairs(Q) do
        for M, N in pairs(v) do
            local U = N.LevelReq
            for O, P in pairs(N.Task) do
                if O == Mob1 then
                    for _, a0 in next, v do
                        if a0.LevelReq <= game.Players.LocalPlayer.Data.Level.Value and a0.Name ~= "Town Raid" then
                            for a1, a2 in next, a0.Task do
                                if a2 > 1 then
                                    table.insert(a, a1)
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    return a
end
local a3 = require(game.ReplicatedStorage:WaitForChild("GuideModule"))
function CheckQuestData()
    for r, v in next, a3.Data do
        if r == "QuestData" then
            return true
        end
    end
    return false
end
function CheckNameDoubleQuest()
    local a
    if CheckQuestData() then
        for r, v in next, a3.Data.QuestData.Task do
            a = r
        end
    end
    return a
end
function CheckNameDoubleQuest2()
    local a
    local a4 = {}
    if CheckQuestData() then
        for r, v in next, a3.Data.QuestData.Task do
            a = r
            table.insert(a4, r)
        end
    end
    return a4
end
function CheckDoubleQuest2()
    S()
    local a5 = {}
    if
        game.Players.LocalPlayer.Data.Level.Value >= 10 and h["Double Quest"] and CheckQuestData() and
            CheckNameDoubleQuest() == Mob1 and
            #CheckNameDoubleQuest() > 2
     then
        for r, v in pairs(Q) do
            for M, N in pairs(v) do
                for O, P in pairs(N.Task) do
                    if tostring(O) == Mob1 then
                        for a6, a7 in next, v do
                            for a8, a9 in next, a7.Task do
                                if a8 ~= Mob1 and a9 > 1 then
                                    if a7.LevelReq <= game.Players.LocalPlayer.Data.Level.Value then
                                        a5["Name"] = tostring(a8)
                                        a5["NameQuest"] = r
                                        a5["ID"] = a6
                                    else
                                        a5["Name"] = Mob1
                                        a5["NameQuest"] = Mob2
                                        a5["ID"] = Mob3
                                    end
                                    return a5
                                end
                            end
                        end
                    end
                end
            end
        end
    else
        a5["Name"] = Mob1
        a5["NameQuest"] = Mob2
        a5["ID"] = Mob3
        return a5
    end
    a5["Name"] = Mob1
    a5["NameQuest"] = Mob2
    a5["ID"] = Mob3
    return a5
end
function MobLevel1OrMobLevel2()
    local aa = {}
    for r, v in pairs(game.Workspace.Enemies:GetChildren()) do
        if
            not table.find(aa, v.Name) and v:IsA("Model") and v.Name ~= "PirateBasic" and
                not string.find(v.Name, "Brigade") and
                v:FindFirstChild("Humanoid") and
                v.Humanoid.Health > 0 and
                v:FindFirstChild("HumanoidRootPart")
         then
            table.insert(aa, v.Name)
        end
    end
    for r, v in pairs(aa) do
        local ab = v
        v = tostring(v:gsub(" %pLv. %d+%p", ""))
        if tostring(v) == CheckNameDoubleQuest() then
            return tostring(ab)
        end
    end
    return false
end
local ad = game.ReplicatedStorage.Remotes["CommF_"]
function CFrameQuest()
    if game.Players.LocalPlayer.PlayerGui.Main:FindFirstChild("Quest").Visible then
        return
    end
    if not QuestPoint[tostring(CheckDoubleQuest2().NameQuest)] then
        CFrameQuest()
        return
    end
    if
        (QuestPoint[CheckDoubleQuest2().NameQuest].Position -
            game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 8
     then
        ad:InvokeServer("StartQuest", tostring(CheckDoubleQuest2().NameQuest), CheckDoubleQuest2().ID)
    else
        QuestCFrame = QuestPoint[CheckDoubleQuest2().NameQuest]
        Tweento(QuestCFrame)
    end
end
function GetMob()
    local ae = {}
    for r, v in pairs(game.Workspace.MobSpawns:GetChildren()) do
        if not table.find(ae, v.Name) then
            table.insert(ae, v.Name)
        end
    end
    if string.find(game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:GetChildren()[1].Name, "Lv.") then
        for r, v in pairs(ae) do
            local ab = v
            v = tostring(v:gsub(" %pLv. %d+%p", ""))
            if v == CheckNameDoubleQuest() then
                return ab
            end
        end
    else
        return CheckNameDoubleQuest()
    end
end

function S()
            local T = game.Players.LocalPlayer.Data.Level.Value
            local min = 0
            if T >= 1450 and game.PlaceId == 4442272183 then
               Mob1 = "Water Fighter"
               Mob2 = "ForgottenQuest"
               Mob3 = 2
            elseif  T >= 700 and game.PlaceId == 2753915549 then
               Mob1 = "Galley Captain"
               Mob2 = "FountainQuest"
               Mob3 = 2
            elseif  T >= 1350 then
               local shitbozo = math.random(1,2)
               Mob2 = "FrostQuest"
               if shitbozo == 1 then
                  Mob1 = "Snow Lurker"
                  Mob3 = 2
               else
                  Mob1 = "Arctic Warrior"
                  Mob3 = 1
               end
            elseif T >= 2050 then
                  Mob1 = "Posessed Mummy"
                  Mob2 = "HauntedQuest2"
                  Mob3 = 2
               else
                  for r, v in pairs(Q) do
                     for M, N in pairs(v) do
                        local U = N.LevelReq
                        for O, P in pairs(N.Task) do
                           if T >= U and U >= min and N.Task[O] > 1 and not table.find(R, tostring(r)) then
                              min = U
                              Mob1 = tostring(O)
                              Mob2 = r
                              Mob3 = M
                           end
                        end
                     end
                  end
               end
            end