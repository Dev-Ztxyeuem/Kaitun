if not game:IsLoaded() then repeat game.Loaded:Wait() until game:IsLoaded() end
local plr = game.Players.LocalPlayer

repeat
    wait(10)
until game:IsLoaded(10)
if game.PlaceId == 2753915549 then
    World1 = true
elseif game.PlaceId == 4442272183 then
    World2 = true
elseif game.PlaceId == 7449423635 then
    World3 = true
end

local Players = game:GetService("Players")
local Title = "Ez Hub"
local SubTitle = "By Ztx" --Main Rewrite discord.gg/9PzEWrzgXR
local Fluent = loadstring(game:HttpGet("https://raw.githubusercontent.com/NguyenLam2504/rblx/refs/heads/main/gay.lua"))()
local Window = getgenv().Window or Fluent:CreateWindow({
    Title = Title,
    SubTitle = SubTitle,
    TabWidth = 160,
    Size = UDim2.fromOffset(480, 360),
    Acrylic = false, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.End
})
local Tabs = {
    Settings = Window:AddTab({ Title = "Setting", Icon = "" }),
    Status = Window:AddTab({ Title = "Status",Icon = "" }),
    Player = Window:AddTab({ Title = "Local Player", Icon = "" }),
    Shop = Window:AddTab({ Title = "Shop", Icon = "" }),
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    SubFram = Window:AddTab({ Title = "Sub Farming", Icon = "" }),
    OtherFram = Window:AddTab({ Title = "Other Framing", Icon = "" }),
    Item = Window:AddTab({ Title = "Get Item", Icon = "" }),
    Race = Window:AddTab({ Title = "RaceV4-Mirage", Icon = "" }),
    Event = Window:AddTab({ Title = "Sea Event", Icon = "" }),
    Raid = Window:AddTab({ Title = "Raid - Material", Icon = "" }),
    Pvp = Window:AddTab({ Title = "PVP-Aimbot", Icon = "" })
}

local Options = Fluent.Options

    ---Tab toggle
-------Players
Tabs.Player:AddButton({
    Title = "Stop Tween",
    Description = "",
    Callback = function()
        canceltween()
    end
})
------ Setiings
    BringMob = Tabs.Settings:AddToggle("BringMob", {Title = "Bring Mob", Default = true })
BringMob:OnChanged(function(Value)
_G.BringMonster = Value
end)
--- Main


local DropdownTweenSpeed = Tabs.Settings:AddDropdown("SelectWeapon", {
    Title = "Tween Speed",
    Values = {"200", "250", "300", "350"},
    Multi = false,
    Default = 350,
})

DropdownTweenSpeed:SetValue("TweenSpeed")
DropdownTweenSpeed:OnChanged(function(Value)
    
end)

function AutoHaki()
        if not game:GetService("Players").LocalPlayer.Character:FindFirstChild("HasBuso") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Buso")
        end
    end
--- Support Function


-------------------------------------------
---------------------------------------------
function EquipTool(ToolSe)
    if game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe) then
        local tool = game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe)
        wait(0.5)
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(tool)
    end
end
-------------------------------------------
---------------------------------------------
function UnEquipWeapon(Weapon)
    if game.Players.LocalPlayer.Character:FindFirstChild(Weapon) then
        _G.NotAutoEquip = true
        wait(.5)
        game.Players.LocalPlayer.Character:FindFirstChild(Weapon).Parent = game.Players.LocalPlayer.Backpack
        wait(.1)
        _G.NotAutoEquip = false
    end
end
-------------------------------------------
--------------------------------------------

function CheckNearestTeleporter(aI)
local MyLevel = game.Players.LocalPlayer.Data.Level.Value
vcspos = aI.Position
min = math.huge
min2 = math.huge
local y = game.PlaceId
if y == 2753915549 then
    OldWorld = true
elseif y == 4442272183 then
    NewWorld = true
elseif y == 7449423635 then
    ThreeWorld = true
end  
if World3 then
    TableLocations = {
        ["Caslte On The Sea"] = Vector3.new(-5058.77490234375, 314.5155029296875, -3155.88330078125),
        ["Hydra"] = Vector3.new(5661.5302734375, 1013.3587036132812, -334.9619140625),
        ["Mansion"] = Vector3.new(-12463.8740234375, 374.9144592285156, -7523.77392578125),
        ["Great Tree"] = Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586),
        ["Ngu1"] = Vector3.new(-11993.580078125, 334.7812805175781, -8844.1826171875),
        ["ngu2"] = Vector3.new(5314.58203125, 25.419387817382812, -125.94227600097656)
    }
elseif World2 then
    TableLocations = {
        ["Mansion"] = Vector3.new(-288.46246337890625, 306.130615234375, 597.9988403320312),
        ["Flamingo"] = Vector3.new(2284.912109375, 15.152046203613281, 905.48291015625),
        ["122"] = Vector3.new(923.21252441406, 126.9760055542, 32852.83203125),
        ["3032"] = Vector3.new(-6508.5581054688, 89.034996032715, -132.83953857422)
    }
elseif World1 then
    TableLocations = {
        ["1"] = Vector3.new(-7894.6201171875, 5545.49169921875, -380.2467346191406),
        ["2"] = Vector3.new(-4607.82275390625, 872.5422973632812, -1667.556884765625),
        ["3"] = Vector3.new(61163.8515625, 11.759522438049316, 1819.7841796875),
        ["4"] = Vector3.new(3876.280517578125, 35.10614013671875, -1939.3201904296875)
    }
end
TableLocations2 = {}
for r, v in pairs(TableLocations) do
    TableLocations2[r] = (v - vcspos).Magnitude
end
for r, v in pairs(TableLocations2) do
    if v < min then
        min = v
        min2 = v
    end
end
for r, v in pairs(TableLocations2) do
    if v < min then
        min = v
        min2 = v
    end
end
for r, v in pairs(TableLocations2) do
    if v <= min then
        choose = TableLocations[r]
    end
end
min3 = (vcspos - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
if min2 <= min3 then
    return choose
end
end

function requestEntrance(aJ)
args = {"requestEntrance", aJ}
game.ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
oldcframe = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
char = game.Players.LocalPlayer.Character.HumanoidRootPart
char.CFrame = CFrame.new(oldcframe.X, oldcframe.Y + 50, oldcframe.Z)
task.wait(0.5)
end

function AntiLowHealth(aK)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
    CFrame.new(
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X,
    aK,
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Z
)
wait()
end
TweenSpeed = 300
function topos(aL)
pcall(function()
        if game:GetService("Players").LocalPlayer and game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character:FindFirstChild("Humanoid") and game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and  game:GetService("Players").LocalPlayer.Character.Humanoid.Health > 0 and game:GetService("Players").LocalPlayer.Character.HumanoidRootPart then
            if not TweenSpeed then
                TweenSpeed = 300
            end
            DefualtY = aL.Y
            TargetY = aL.Y
            targetCFrameWithDefualtY = CFrame.new(aL.X, DefualtY, aL.Z)
            targetPos = aL.Position
            oldcframe = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
            Distance = (targetPos - game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude
            if Distance <= 300 then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = aL
            end
            local aM = CheckNearestTeleporter(aL)
            if aM then
                pcall(function()
                        tween:Cancel()
                    end)
                requestEntrance(aM)
            end
            b1 = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X,DefualtY,game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Z)
            if IngoreY and (b1.Position - targetCFrameWithDefualtY.Position).Magnitude > 5 then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X,DefualtY,game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Z)
                local tweenfunc = {}
                local aN = game:service "TweenService"
                local aO =
                    TweenInfo.new((targetPos -game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude /TweenSpeed,Enum.EasingStyle.Linear)
                tween = aN:Create(game:GetService("Players").LocalPlayer.Character["HumanoidRootPart"],aO,{CFrame = targetCFrameWithDefualtY})
                tween:Play()
                function tweenfunc:Stop()
                    tween:Cancel()
                end
                tween.Completed:Wait()
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X,TargetY,game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Z)
            else
                local tweenfunc = {}
                local aN = game:service "TweenService"
                local aO =
                    TweenInfo.new((targetPos -game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude /TweenSpeed,Enum.EasingStyle.Linear)
                tween = aN:Create(game:GetService("Players").LocalPlayer.Character["HumanoidRootPart"],aO,{CFrame = aL})
                tween:Play()
                function tweenfunc:Stop()
                    tween:Cancel()
                end
                tween.Completed:Wait()
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X,TargetY,game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Z)
            end
            if not tween then
                return tween
            end
            return tweenfunc
        end
    end
)
end
IngoreY = true
Type = 1
spawn(function()
while wait(.1) do
if Type == 1 then
    Pos = CFrame.new(0,PosY,-30)
elseif Type == 2 then
    Pos = CFrame.new(30,PosY,0)
elseif Type == 3 then
    Pos = CFrame.new(0,PosY,30)	
elseif Type == 4 then
    Pos = CFrame.new(-30,PosY,0)
end
end
end)

spawn(function()
while wait(0.5) do
Type = 1
wait(0.4)
Type = 2
wait(0.3)
Type = 3
wait(0.4)
Type = 4
wait(0.2)
Type = 5
wait(0.3)
end
end)

spawn(function()
while wait(.1) do
Frame = 1
wait(0.4)
Frame = 2
wait(0.4)
Frame = 3
wait(0.3)
Frame = 4
wait(0.4)
Frame = 5
wait(0.3)
end
end)

Type = 1
spawn(function()
while wait(.1) do
if Frame == 1 then
    Check = CFrame.new(0,50,0)
elseif F == 2 then
    Check = CFrame.new(0,0,-100)
elseif F == 3 then
    Check = CFrame.new(100,0,0)
elseif F == 4 then
    Check = CFrame.new(0,0,100)	
elseif F == 5 then
    Check = CFrame.new(-100,0,0)
elseif F == 6 then
    Check = CFrame.new(0,50,0)
end
end
end)

spawn(function()
while wait(.1) do
F = 1
wait(0.5)
F = 2
wait(0.5)
F = 3
wait(0.5)
F = 4
wait(0.5)
F = 5
wait(0.5)
end
end)

spawn(function()
    game:GetService("RunService").Heartbeat:Connect(function()
        if _G.AutoAdvanceDungeon or _G.AutoDoughtBoss or _G.Auto_DungeonMobAura or _G.AutoFarmChest or _G.AutoFactory or _G.AutoFarmBossHallow or _G.AutoFarmSwanGlasses or _G.AutoLongSword or _G.AutoBlackSpikeycoat or _G.AutoElectricClaw or _G.AutoFarmGunMastery or _G.AutoHolyTorch or _G.AutoLawRaid or _G.AutoFarmBoss or _G.AutoTwinHooks or _G.AutoOpenSwanDoor or _G.AutoDragon_Trident or _G.AutoSaber or _G.NOCLIP or _G.AutoFarmFruitMastery or _G.AutoFarmGunMastery or _G.TeleportIsland or _G.Auto_EvoRace or _G.AutoFarmAllMsBypassType or _G.AutoObservationv2 or _G.AutoMusketeerHat or _G.AutoEctoplasm or _G.AutoRengoku or _G.Auto_Rainbow_Haki or _G.AutoObservation or _G.AutoDarkDagger or _G.Safe_Mode or _G.MasteryFruit or _G.AutoBudySword or _G.AutoOderSword or _G.AutoBounty or _G.AutoAllBoss or _G.Auto_Bounty or _G.AutoSharkman or _G.Auto_Mastery_Fruit or _G.Auto_Mastery_Gun or _G.Auto_Dungeon or _G.Auto_Cavender or _G.Auto_Pole or _G.Auto_Kill_Ply or _G.Auto_Factory or _G.AutoSecondSea or _G.TeleportPly or _G.AutoBartilo or _G.Auto_DarkBoss or _G.GrabChest or _G.MethodFarm or _G.Holy_Torch or _G.AutoFarm or _G.Clip or _G.AutoElitehunter or _G.AutoThirdSea or _G.Auto_Bone or _G.Autoheart or _G.Autodoughking or _G.AutoFarmMaterial or _G.AutoNevaSoulGuitar or _G.Auto_Dragon_Trident or _G.Autotushita or _G.d or _G.Autowaden or _G.Autogay or _G.Autopole or _G.Autosaw or _G.AutoObservationHakiV2 or _G.AutoFarmNearest or AutoFarmChest or _G.AutoCarvender or _G.AutoTwinHook or AutoMobAura or _G.Tweenfruit or _G.AutoKai or _G.TeleportNPC or _G.Leather or _G.Auto_Wing or _G.Umm or _G.Makori_gay or Radioactive or Fish or Gunpowder or Dragon_Scale or Cocoafarm or Scrap or MiniHee or _G.AutoFarmSeabaest or Auto_Cursed_Dual_Katana or _G.AutoFarmMob or _G.AutoMysticIsland or _G.AutoFarmDungeon or _G.AutoRaidPirate or _G.AutoQuestRace or _G.TweenMGear or getgenv().AutoFarm or _G.AutoPlayerHunter or _G.AutoFactory or Grab_Chest or _G.Namfon or _G.AutoSwordMastery or _G.AutoSeaBest or _G.AutoKillTial or _G.Auto_Saber or _G.Position_Spawn or _G.Farmfast or _G.AutoRace or _G.RaidPirate or Open_Color_Haki then
            if not game:GetService("Workspace"):FindFirstChild("LOL") then
                local LOL = Instance.new("Part")
                LOL.Name = "LOL"
                LOL.Parent = game.Workspace
                LOL.Anchored = true
                LOL.Transparency = 1
                LOL.Size = Vector3.new(30,-0.5,30)
            elseif game:GetService("Workspace"):FindFirstChild("LOL") then
                game.Workspace["LOL"].CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -3.6, 0)
            end
        else
            if game:GetService("Workspace"):FindFirstChild("LOL") then
                game:GetService("Workspace"):FindFirstChild("LOL"):Destroy()
            end
        end
    end)
    end)

    spawn(function()
        while task.wait() do
            pcall(function()
                if _G.AutoLevel or _G.MethodFarm or _G.TeleportIsland or _G.AutoNextIsland or _G.AutoMaterial or _G.SailBoat or _G.AutoSeaBest or _G.AutoKillShark or _G.AutoKillPiranha or _G.AutoKillFishCrew or _G.RelzFishBoat or _G.RelzPirateBrigade or _G.RelzPirateGrandBrigade or _G.AutoTerrorshark or _G.AutoNear or _G.DitElite or _G.AutoRaidPirate or _G.AutoHakiPad or _G.RipIndraKill or _G.AutoBartilo or _G.AutoFarmBossHallow or _G.AutoBoss or _G.Auto_DarkBoss or _G.Auto_DoughKing or _G.AutoSoulGuitar or _G.Factory or getgenv().TeleportPly or getgenv().Auto_Kill_Ply or _G.CollectFruit or _G.CollectFruitHop then
                    if not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip") then
                        local Noclip = Instance.new("BodyVelocity")
                        Noclip.Name = "BodyClip"
                        Noclip.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                        Noclip.MaxForce = Vector3.new(100000,100000,100000)
                        Noclip.Velocity = Vector3.new(0,0,0)
                    end
                else
                    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip"):Destroy()
                end
            end)
        end
    end)

    spawn(function()
        pcall(function()
          game:GetService("RunService").Stepped:Connect(function()
            if _G.AutoLevel or _G.MethodFarm or _G.TeleportIsland or _G.AutoNextIsland or _G.AutoMaterial or _G.SailBoat or _G.AutoSeaBest or _G.AutoKillShark or _G.AutoKillPiranha or _G.AutoKillFishCrew or _G.RelzFishBoat or _G.RelzPirateBrigade or _G.RelzPirateGrandBrigade or _G.AutoTerrorshark or _G.AutoNear or _G.DitElite or _G.AutoRaidPirate or _G.AutoHakiPad or _G.RipIndraKill or _G.AutoBartilo or _G.AutoFarmBossHallow or _G.AutoBoss or _G.Auto_DarkBoss or _G.Auto_DoughKing or _G.AutoSoulGuitar or _G.Factory or getgenv().TeleportPly or getgenv().Auto_Kill_Ply or _G.CollectFruit or _G.CollectFruitHop then
            for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
            if v:IsA("BasePart") then
            v.CanCollide = false
            end
            end
            end
            end)
          end)
        end)
      
    
    function StopTween(value)
        if not value then
            topos(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame)
            pcall(function()
                if game.Players.LocalPlayer.Character.Head:FindFirstChild("BodyVelocity") then
                    game.Players.LocalPlayer.Character.Head:FindFirstChild("BodyVelocity"):Destroy()
                end
            end)
        end
    end

    --------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
--- Fast_Attack


local environment, replicatedstorage, players, net, client, modulepath, characterfolder, enemyfolder do
	environment = (getgenv or getrenv or getfenv)()
	replicatedstorage = game:GetService("ReplicatedStorage")
	players = game:GetService("Players")
	client = players.LocalPlayer
	modulepath = replicatedstorage:WaitForChild("Modules")
	net = modulepath:WaitForChild("Net")
	characterfolder = workspace:WaitForChild("Characters")
	enemyfolder = workspace:WaitForChild("Enemies")
end

local Module = {}
Module.AttackCooldown = .0
local CachedChars = {}

function Module.IsAlive(Char: Model?): boolean
	if not Char then
		return nil
	end

	if CachedChars[Char] then
		return CachedChars[Char].Health > 0
	end

	local Hum = Char:FindFirstChildOfClass("Humanoid")
	CachedChars[Char] = Hum
	return Hum and Hum.Health > 0
end

local Settings = {
	ClickDelay = 0.1,
	AutoClick = true
}

Module.FastAttack = (function()
	if environment._trash_attack then
		return environment._trash_attack
	end
	local module = {
		NextAttack = 0,
		Distance = 100,
		attackMobs = _G.AttackMob,
		attackPlayers = _G.AttackPlayer
	}
	local RegisterAttack = net:WaitForChild("RE/RegisterAttack")
	local RegisterHit = net:WaitForChild("RE/RegisterHit")
	function module:AttackEnemy(EnemyHead, Table)
		if EnemyHead and client:DistanceFromCharacter(EnemyHead.Position) < self.Distance then
			if not self.FirstAttack then
				RegisterAttack:FireServer(.0)
				self.FirstAttack = true
			end
			RegisterHit:FireServer(EnemyHead, Table or {})
		end
	end
	function module:AttackNearest()
		local args = {
			[1] = nil,
			[2] = {}
		}
		for _, Enemy in enemyfolder:GetChildren() do
			local HRP = Enemy:FindFirstChild("HumanoidRootPart", true)
			if HRP and client:DistanceFromCharacter(HRP.Position) < self.Distance then
				if not args[1] then
					args[1] = Enemy:FindFirstChild("UpperTorso")
				else
					table.insert(args[2], {
						[1] = Enemy,
						[2] = Enemy:FindFirstChild("UpperTorso")
					})
				end
			end
		end
		self:AttackEnemy(unpack(args))
		for _, Enemy in characterfolder:GetChildren() do
			if Enemy ~= client.Character then
				self:AttackEnemy(Enemy:FindFirstChild("UpperTorso"))
			end
		end
		if not self.FirstAttack then
			task.wait(.0)
		end
	end
	function module:BladeHits()
		self:AttackNearest()
		self.FirstAttack = false
	end
	task.spawn(function()
		while game:GetService("RunService").Stepped:Wait() do
			if (tick() - Module.AttackCooldown) < 0 then continue end
			if not Settings.AutoClick then continue end
			if not Module.IsAlive(client.Character) then continue end
			if not client.Character:FindFirstChildOfClass("Tool") then continue end
			module:BladeHits()
		end
	end)
	environment._trash_attack = module
	return module
end)()

local RS = game:GetService("ReplicatedStorage")
local regAtk = RS.Modules.Net:FindFirstChild("RE/RegisterAttack")
local regHit = RS.Modules.Net:FindFirstChild("RE/RegisterHit")

local function zXy9(player)
	local lst = {}
	for _, obj in pairs(workspace.Characters:GetChildren()) do
		if obj ~= player.Character and obj:FindFirstChild("HumanoidRootPart") and player:DistanceFromCharacter(obj.HumanoidRootPart.Position) < 200 then
			table.insert(lst, {obj, obj.HumanoidRootPart})
		end
	end

	for _, obj2 in pairs(workspace.Enemies:GetChildren()) do
		if obj2:FindFirstChild("HumanoidRootPart") and player:DistanceFromCharacter(obj2.HumanoidRootPart.Position) < 200 then
			table.insert(lst, {obj2, obj2.HumanoidRootPart})
		end
	end

	return lst
end

local yZn34 = false
spawn(function()
    while true do
        if Xz12 then
            yZn34 = true
            wait(0.1)
        else
            yZn34 = false
            wait(0.5)
        end
        if Xz12 then
            local cLst = zXy9(game.Players.LocalPlayer)
            if #cLst > 0 then
                regAtk:FireServer(0.4)
                for _, tgt in next, cLst do
                    regHit:FireServer(cLst[_][2], cLst)
                end
            end
        end
    end
end)
Xz12 = true
getgenv().FastAttack = true
task.spawn(function()
	while true do
		task.wait(0.1)
		pcall(function()
			if getgenv().FastAttack then
				for i, v in next, workspace.Enemies:GetChildren() do
					if v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and 
						(v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= tonumber(60) then

						game:GetService("ReplicatedStorage"):WaitForChild("Modules"):WaitForChild("Net"):WaitForChild("RE/RegisterAttack"):FireServer(0)

						local args = {
							[1] = v:FindFirstChild("RightHand"),
							[2] = {}
						}

						for _, e in next, workspace:WaitForChild("Enemies"):GetChildren() do
							if e:FindFirstChild("Humanoid") and e.Humanoid.Health > 0 then
								table.insert(args[2], {
									[1] = e,
									[2] = e:FindFirstChild("HumanoidRootPart") or e:FindFirstChildOfClass("BasePart")
								})
							end
						end

						game:GetService("ReplicatedStorage"):WaitForChild("Modules"):WaitForChild("Net"):WaitForChild("RE/RegisterHit"):FireServer(unpack(args))
					end
				end
			end
		end)
	end
end)

local environment, replicatedstorage, players, net, client, modulepath, characterfolder, enemyfolder do
	environment = (getgenv or getrenv or getfenv)()
	replicatedstorage = game:GetService("ReplicatedStorage")
	players = game:GetService("Players")
	client = players.LocalPlayer
	modulepath = replicatedstorage:WaitForChild("Modules")
	net = modulepath:WaitForChild("Net")
	characterfolder = workspace:WaitForChild("Characters")
	enemyfolder = workspace:WaitForChild("Enemies")
end

local Module = {}
Module.AttackCooldown = .0
local CachedChars = {}

function Module.IsAlive(Char: Model?): boolean
	if not Char then
		return nil
	end

	if CachedChars[Char] then
		return CachedChars[Char].Health > 0
	end

	local Hum = Char:FindFirstChildOfClass("Humanoid")
	CachedChars[Char] = Hum
	return Hum and Hum.Health > 0
end

local Settings = {
	ClickDelay = 0.1,
	AutoClick = true
}
Module.FastAttack = (function()
	if environment._trash_attack then
		return environment._trash_attack
	end
	local module = {
		NextAttack = 0,
		Distance = 100,
		attackMobs = _G.AttackMob,
		attackPlayers = _G.AttackPlayer
	}
	local RegisterAttack = net:WaitForChild("RE/RegisterAttack")
	local RegisterHit = net:WaitForChild("RE/RegisterHit")
	function module:AttackEnemy(EnemyHead, Table)
		if EnemyHead and client:DistanceFromCharacter(EnemyHead.Position) < self.Distance then
			if not self.FirstAttack then
				RegisterAttack:FireServer(.0)
				self.FirstAttack = true
			end
			RegisterHit:FireServer(EnemyHead, Table or {})
		end
	end
	function module:AttackNearest()
		local args = {
			[1] = nil,
			[2] = {}
		}
		for _, Enemy in enemyfolder:GetChildren() do
			local HRP = Enemy:FindFirstChild("HumanoidRootPart", true)
			if HRP and client:DistanceFromCharacter(HRP.Position) < self.Distance then
				if not args[1] then
					args[1] = Enemy:FindFirstChild("UpperTorso")
				else
					table.insert(args[2], {
						[1] = Enemy,
						[2] = Enemy:FindFirstChild("UpperTorso")
					})
				end
			end
		end
		self:AttackEnemy(unpack(args))
		for _, Enemy in characterfolder:GetChildren() do
			if Enemy ~= client.Character then
				self:AttackEnemy(Enemy:FindFirstChild("UpperTorso"))
			end
		end
		if not self.FirstAttack then
			task.wait(0.1)
		end
	end
	function module:BladeHits()
		self:AttackNearest()
		self.FirstAttack = false
	end
	task.spawn(function()
		while game:GetService("RunService").Stepped:Wait() do
			if (tick() - Module.AttackCooldown) < 0 then continue end
			if not Settings.AutoClick then continue end
			if not Module.IsAlive(client.Character) then continue end
			if not client.Character:FindFirstChildOfClass("Tool") then continue end
			module:BladeHits()
		end
	end)
	environment._trash_attack = module
	return module
end)()

function Click()
	game:GetService("VirtualUser"):CaptureController()
	game:GetService("VirtualUser"):Button1Down(Vector2.new(1280, 672))
end
function AttackPlayers()
	game:GetService("VirtualUser"):CaptureController()
	game:GetService("VirtualUser"):Button1Down(Vector2.new(1280, 672))
end
    --Sword Weapon
    function GetWeaponInventory(Weaponname)
        for i,v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventory")) do
        if type(v) == "table" then
        if v.Type == "Sword" then
        if v.Name == Weaponname then
        return true
        end
        end
        end
        end
        return false
        end
---------- dual quest
local Q = require(game.ReplicatedStorage.Quests)
    local R = {"BartiloQuest", "Trainees", "MarineQuest", "CitizenQuest"}
    local function S()
        local T = game.Players.LocalPlayer.Data.Level.Value
        local min = 0
        if T >= 1450 and game.PlaceId == 4442272183 then
            Mob1 = "Water Fighter"
            Mob2 = "ForgottenQuest"
            Mob3 = 2
        elseif T >= 700 and game.PlaceId == 2753915549 then
            Mob1 = "Galley Captain"
            Mob2 = "FountainQuest"
            Mob3 = 2
        else
            for r, v in pairs(Q) do
                for M, N in pairs(v) do
                    local U = N.LevelReq
                    for O, P in pairs(N.Task) do
                        if T >= U and U >= min and N.Task[O] > 1 and not table.find(R, tostring(r)) then
                            min = U
                            Mob1 = tostring(O)
                            Mob2 = r
                            Mob3 = M
                        end
                    end
                end
            end
        end
    end
    function CFrameQuest()
        local GuideModule = require(game.ReplicatedStorage.GuideModule)
        for list,NPCListC in pairs(GuideModule["Data"]["NPCList"]) do
            if NPCListC["NPCName"] == GuideModule["Data"]["LastClosestNPC"] then
                return list["CFrame"]
            end
        end
    end
    local Q = require(game.ReplicatedStorage.Quests)
    local a3 = require(game.ReplicatedStorage:WaitForChild("GuideModule"))
    function CheckDataQuest()
        for r, v in next, a3.Data do
            if r == "QuestData" then
                return true
            end
        end
        return false
    end
    function CheckNameMobDoubleQuest()
        local a
        if CheckDataQuest() then
            for r, v in next, a3.Data.QuestData.Task do
                a = r
            end
        end
        return a
    end
    function CheckDoubleQuestSkidcuaYMF()
        S()
        local a5 = {}
        if game.Players.LocalPlayer.Data.Level.Value >= 10 and CheckDataQuest() and CheckNameMobDoubleQuest() == Mob1 and #CheckNameMobDoubleQuest() > 2 then
            for r, v in pairs(Q) do
                for M, N in pairs(v) do
                    for O, P in pairs(N.Task) do
                        if tostring(O) == Mob1 then
                            for a6, a7 in next, v do
                                for a8, a9 in next, a7.Task do
                                    if a8 ~= Mob1 and a9 > 1 then
                                        if a7.LevelReq <= game.Players.LocalPlayer.Data.Level.Value then
                                            a5["Name"] = tostring(a8)
                                            a5["Mob2"] = r
                                            a5["ID"] = a6
                                        else
                                            a5["Name"] = Mob1
                                            a5["Mob2"] = Mob2
                                            a5["ID"] = Mob3
                                        end
                                        return a5
                                    end
                                end
                            end
                        end
                    end
                end
            end
        else
            a5["Name"] = Mob1
            a5["Mob2"] = Mob2
            a5["ID"] = Mob3
            return a5
        end
        a5["Name"] = Mob1
        a5["Mob2"] = Mob2
        a5["ID"] = Mob3
        return a5
    end
    function MobLevel1OrMobLevel2()
        local aa = {}
        for r, v in pairs(game.Workspace.Enemies:GetChildren()) do
            if not table.find(aa, v.Name) and v:IsA("Model") and v.Name ~= "PirateBasic" and not string.find(v.Name, "Brigade") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") then
                table.insert(aa, v.Name)
            end
        end
        for r, v in pairs(aa) do
            local ab = v
            v = tostring(v:gsub(" %pLv. %d+%p", ""))
            if tostring(v) == CheckNameMobDoubleQuest() then
                return tostring(ab)
            end
        end
        return false
    end
    ---------------------------------------------------------------------
    -----------
    SelectWeapon = Tabs.Settings:AddDropdown("SelectWeapon", {
        Title = "Select Weapon",
        Values = { "Melee", "Sword" },
        Multi = false,
        Default = 1,
    })
    
    SelectWeapon:SetValue("Melee")
    
    SelectWeapon:OnChanged(function(Value)
        ChooseWeapon  = Value
    end)
    
    task.spawn(function()
        while wait() do
            pcall(function()
                if ChooseWeapon == "Melee" then
                    for i ,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if v.ToolTip == "Melee" then
                            if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
                                SelectWeapon = v.Name
                            end
                        end
                    end
                elseif ChooseWeapon == "Sword" then
                    for _, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if v.ToolTip == "Sword" then
                            if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
                                SelectWeapon = v.Name
                            end
                        end
                    end
                else
                    for i ,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                        if v.ToolTip == "Melee" then
                            if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(v.Name)) then
                                SelectWeapon = v.Name
                            end
                        end
                    end
                end
            end)
        end
    end)
-----------------
------------------

    Tabs.Main:AddParagraph({
        Title = "Main Farm",
        Content = ""
    })
    
    local ListF = {"Level Farm", "Farm Bones", "Farm Katakuri"}
        FMode = "Farm Katakuri"
        
        local methodfarm = Tabs.Main:AddDropdown("DropdownTweenSpeed", {
        Title = "Method Farm",
        Values = ListF,
        Multi = false,
        Default = FMode,
    })
    methodfarm:SetValue("Level Farm")
    methodfarm:OnChanged(function(Value)
        FMode = Value
    
    end)
    
    function GetRandomTween(ck)
        local RandomL,R2 = math.random(30,100), math.random(10,40)
        return ck * CFrame.new(RandomL, 100, R2)
    end
    
    function RemoveLevelTitle(v)
        return tostring(tostring(v):gsub(" %pLv. %d+%p", ""):gsub(" %pRaid Boss%p", ""):gsub(" %pBoss%p", ""))
    end 
    
    plr = game.Players.LocalPlayer
    if game.Workspace:FindFirstChild("MobSpawns") then
        for i, v in pairs(game.Workspace:GetChildren()) do
            if v.Name == "MobSpawns" then
                v:Destroy()
            end
        end
    end
    local CreateFoldermmb = Instance.new("Folder")
    CreateFoldermmb.Parent = game.Workspace
    CreateFoldermmb.Name = "MobSpawns"
    function RemoveLevelTitle(v)
        return tostring(tostring(v):gsub(" %pLv. %d+%p", ""):gsub(" %pRaid Boss%p", ""):gsub(" %pBoss%p", ""))
    end 
    task.spawn(
        function()
            while task.wait() do 
                pcall(function()
                    for i,v in pairs(game.workspace.MobSpawns:GetChildren()) do  
                        v.Name = RemoveLevelTitle(v.Name)
                    end
                end)
                task.wait(50)
            end
        end
    )
    function MobDepTrai()
        MobDepTraiTable = {}
        for i, v in pairs(game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:GetChildren()) do
            table.insert(MobDepTraiTable, v)
        end
        local tablefoldermmb = {}
        for i, v in next, require(game:GetService("ReplicatedStorage").Quests) do
            for i1, v1 in next, v do
                for i2, v2 in next, v1.Task do
                    if v2 > 1 then
                        table.insert(tablefoldermmb, i2)
                    end
                end
            end
        end
        for i, v in pairs(getnilinstances()) do
            if table.find(tablefoldermmb, RemoveLevelTitle(v.Name)) then
                table.insert(MobDepTraiTable, v)
            end
        end
        return MobDepTraiTable
    end
    local MobSpawnList = MobDepTrai()
    function ReloadFolderMob()
        for i, v in next, game.Workspace.MobSpawns:GetChildren() do
            v:Destroy()
        end
        for i, v in pairs(MobSpawnList) do
            if v then
                if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
                    MobNew = Instance.new("Part")
                    MobNew.CFrame = v.HumanoidRootPart.CFrame
                    MobNew.Name = v.Name
                    MobNew.Parent = game.Workspace.MobSpawns
                elseif v:IsA("Part") then
                    MobNew = v:Clone()
                    MobNew.Parent = game.Workspace.MobSpawns
                end
            end
        end
    end
    ReloadFolderMob()
    function CheckMobSpawns(ic)
        for _,MobSpawnsFolder in pairs(game.Workspace.MobSpawns:GetChildren()) do
            if MobSpawnsFolder.Name == ic then
                return MobSpawnsFolder
            end
        end
    end
    
    function GetMobSpawnList(a)
        a = RemoveLevelTitle(a)
        k = {}
        for i, v in pairs(game.Workspace.MobSpawns:GetChildren()) do
            if v.Name == a then
                table.insert(k, v)
            end
        end
        return k
    end
    
    function VelocityEnemys(enemy)
        local humanoid = enemy.HumanoidRootPart or enemy:WaitForChild('HumanoidRootPart')
        if not humanoid then return end    
        humanoid.ChildAdded:Connect(function(child)
            if child:IsA("BodyVelocity") or child:IsA("BodyPosition") then
                child.MaxForce = Vector3.new(0, 0, 0)
                child.P = 0 
            elseif child:IsA("BodyGyro") then 
                child.P = 0 
                child.MaxTorque = Vector3.new(0, 0, 0)
            end
        end)
    end
    game.workspace.Characters.ChildAdded:Connect(loadplr)
    function TweenObject(TweenCFrame,obj,ts)
        if not ts then ts = 350 end
        local tween_s = game:service "TweenService"
        local info = TweenInfo.new((TweenCFrame.Position -obj.Position).Magnitude /ts,Enum.EasingStyle.Linear)
        tween= tween_s:Create(obj,info,{CFrame=TweenCFrame})
        tween:Play() 
    end	
    
    function AddHitbox(numberRadius)
        local CRV = getupvalues(require(game:GetService("Players").LocalPlayer.PlayerScripts:WaitForChild("CombatFramework")))[2]
        CRV.activeController.hitboxMagnitude = numberRadius
    end
    
    function Bring(nameMob,BringC,DistanceF,radius)
        inputed = nameMob
        inputed2 = DistanceF
        inputed3 = radius
        inputed4 = BringC
        for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
            if v.Name == inputed and DetectingPart(v) and v.Humanoid.Health > 0 and inputed2.Magnitude <= inputed3 then
                VelocityEnemys(v)
                TweenObject(inputed4, v.HumanoidRootPart, 5000)
                v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                v.Humanoid.JumpPower = 0
                v.Humanoid.WalkSpeed = 0
                v.Humanoid:ChangeState(14)
                v.HumanoidRootPart.CanCollide = false
                v.Head.CanCollide = false
                if v.Humanoid:FindFirstChild("Animator") then
                    v.Humanoid.Animator:Destroy()
                end
                sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
            end
        end
    end
    
    function CheckEnemies(k, replicated)
        if not replicated then
            replicated = false
        end
        for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
            if type(k) == "table" then
                if table.find(k, v.Name) and DetectingPart(v) and v.Humanoid.Health > 0 then
                    return v
                end
            else
                if v.Name == k and DetectingPart(v) and v.Humanoid.Health > 0 then
                    return v
                end
            end
        end
        if replicated then
            for i,v in pairs(game.ReplicatedStorage:GetChildren()) do
                if type(k) == "table" then
                    if table.find(k, v.Name) then
                        return v
                    end
                else
                    if v.Name == k then
                        return v
                    end
                end
            end
        end
    end
    
    function DetectingPart(v1)
        return v1 and v1:FindFirstChild("HumanoidRootPart") and v1:FindFirstChild("Humanoid")
    end
    
    local KillMonster = function(mob,bringmobvalue,value)
        if CheckEnemies(mob) then
            local v = CheckEnemies(mob)
            task.spawn(function()
                if bringmobvalue == true then
                    Bring(v.Name,v.HumanoidRootPart.CFrame,(v.HumanoidRootPart.Position - v.HumanoidRootPart.Position), 350)
                end
            end)
            if DetectingPart(v) and v.Humanoid.Health > 0 then
                repeat task.wait()
                    NeedAttacking = true
                    AutoHaki()
                    EquipTool(SelectWeapon)
                    Tween(v.HumanoidRootPart.CFrame * CFrame.new(posX,posY,posZ))
                until value or v:FindFirstChild("Humanoid") or not v:FindFirstChild("HumanoidRootPart") or v.Humanoid.Health <= 0
            end
        end
    end
    
    function GetQuest()
        local Distance = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - CFrameQuest().Position).Magnitude
        if Distance <= 20 then
            game.ReplicatedStorage.Remotes["CommF_"]:InvokeServer("StartQuest", tostring(CheckDoubleQuestSkidcuaYMF().Mob2), CheckDoubleQuestSkidcuaYMF().ID)
        else
            topos(CFrameQuest())
        end
    end
    
    function GetMob()
        local tablegetmob = {}
        for i,v in pairs(game.Workspace.MobSpawns:GetChildren()) do
            if not table.find(tablegetmob, v.Name) then
                table.insert(tablegetmob, v.Name)
            end
        end
        if string.find(game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:GetChildren()[1].Name, "Lv.") then
            for i, v in pairs(tablegetmob) do
                local b = v
                v = RemoveLevelTitle(v)
                if v == CheckNameMobDoubleQuest() then
                    return b
                end
            end
        else
            return CheckNameMobDoubleQuest()
        end
    end
    
    local startfarm = Tabs.Main:AddToggle("Start Method Farm", { Title = "Start Method Farm", Description = "", Default = false })
    startfarm:OnChanged(function(Value)
        _G.MethodFarm = Value
        StopTween(_G.MethodFarm )
    end)
    spawn(function ()
        while task.wait() do
            if FMode == "Level Farm" and _G.MethodFarm then
                if game.Players.LocalPlayer.PlayerGui.Main.Quest.Visible then
                    if not MobLevel1OrMobLevel2() then
                        for i, v in pairs(GetMobSpawnList(GetMob())) do
                            pcall(function()
                                if not MobLevel1OrMobLevel2() and FMode == "Level Farm" and _G.MethodFarm then
                                    topos(GetRandomTween(v.CFrame))
                                end
                            end)
                        end
                    else
                        pcall(function()
                            for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
                                if v.Name == MobLevel1OrMobLevel2() and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and game.Players.LocalPlayer.PlayerGui.Main:FindFirstChild("Quest").Visible then
                                    repeat task.wait()
                                        AutoHaki()
                                        EquipTool(SelectWeapon)
                                        topos(v.HumanoidRootPart.CFrame * CFrame.new(0, 30,0))
                                        KillMonster(v.Name, true, FMode == "Level Farm" and _G.MethodFarm == false)
                                    until not v:FindFirstChild("Humanoid") or not v:FindFirstChild("HumanoidRootPart") or v.Humanoid.Health <= 0 or not FMode == "Level Farm" and _G.MethodFarm
                                end
                            end
                        end)
                    end
                else
                    GetQuest()
                end
            end
        end
    end)
    function GetDistance(q)
        if typeof(q) == "CFrame" then
            return LP:DistanceFromCharacter(q.Position)
        elseif typeof(q) == "Vector3" then
            return LP:DistanceFromCharacter(q)
        end
    end

local BoneCFrame = CFrame.new(-9515.75, 174.8521728515625, 6079.40625)
local BoneCFrame2 = CFrame.new(-9359.453125, 141.32679748535156, 5446.81982421875)

spawn(function ()
    while task.wait() do
            if FMode == "Farm Bones" and _G.MethodFarm then
                pcall(
                    function()
                        if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false then
                            if BypassTP then
                                if
                                    (game.Players.LocalPlayer.Character.HumanoidRootPart.Position -
                                        BoneCFrame2.Position).Magnitude > 2500
                                 then
                                    BTP(BoneCFrame2)
                                elseif
                                    (game.Players.LocalPlayer.Character.HumanoidRootPart.Position -
                                        BoneCFrame.Position).Magnitude < 2500
                                 then
                                    topos(BoneCFrame)
                                end
                            else
                                topos(BoneCFrame)
                            end
                            if
                                (BoneCFrame.Position -
                                    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 3
                             then
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                                    "StartQuest",
                                    "HauntedQuest2",
                                    1
                                )
                            end
                        elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == true then
                            if
                                game:GetService("Workspace").Enemies:FindFirstChild("Reborn Skeleton") or
                                    game:GetService("Workspace").Enemies:FindFirstChild("Living Zombie") or
                                    game:GetService("Workspace").Enemies:FindFirstChild("Demonic Soul") or
                                    game:GetService("Workspace").Enemies:FindFirstChild("Posessed Mummy")
                             then
                                for i, v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                    if
                                        v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and
                                            v.Humanoid.Health > 0
                                     then
                                        if
                                            v.Name == "Reborn Skeleton" or v.Name == "Living Zombie" or
                                                v.Name == "Demonic Soul" or
                                                v.Name == "Posessed Mummy"
                                         then
                                            if
                                                string.find(
                                                    game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text,
                                                    "Demonic Soul"
                                                ) 
                                             then
                                                repeat
                                                    wait()
                                                    AutoHaki()
                                                    EquipTool(SelectWeapon)
                                                    topos(v.HumanoidRootPart.CFrame * CFrame.new(0, 30, 0))
                                                    KillMonster(v.Name, true, FMode == "Farm Bones" and _G.MethodFarm == false)
                                                until not _G.MethodFarm or v.Humanoid.Health <= 0 or not v.Parent or
                                                    game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible ==
                                                        false
                                            else
                                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                                                    "AbandonQuest"
                                                )
                                            end
                                        end
                                    end
                                end
                            else
                            end
                        end
                    end
                )
            end
        end
    end
)
spawn(function()
    while wait() do
        if FMode == "Farm Katakuri" and _G.MethodFarm then
            pcall(function()
                local CakeCFrame = CFrame.new(-2142.66821,71.2588654,-12327.4619,0.996939838,-4.33107843e-08,0.078172572,4.20252917e-08,1,1.80894251e-08,-0.078172572,-1.47488439e-08, 0.996939838)
                local CongCake = CFrame.new(-2009.2802734375, 4532.97216796875, -14937.3076171875)
                spawn(function()
                    if BypassTP then
                        if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - CakeCFrame.Position).Magnitude > 2000 then
                        BTP(CakeCFrame)
                        wait(3)
                        elseif (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - CakeCFrame.Position).Magnitude < 2000 then
                        topos(CakeCFrame)
                        end
                    end
                end)
                if game.ReplicatedStorage:FindFirstChild("Cake Prince") or game:GetService("Workspace").Enemies:FindFirstChild("Cake Prince") or game:GetService("Workspace").Enemies:FindFirstChild("Dough King") or game:GetService("ReplicatedStorage"):FindFirstChild("Dough King") then   
                    if game:GetService("Workspace").Enemies:FindFirstChild("Cake Prince") or game:GetService("Workspace").Enemies:FindFirstChild("Dough King") then
                        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do 
                            if v.Name == "Cake Prince" or v.Name == "Dough King" then
                                for i,v in pairs (game.Workspace.Enemies:GetChildren()) do
                                    if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                    if v.Name then
                                    if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v:FindFirstChild("HumanoidRootPart").Position).Magnitude <= 5000 then
                                      repeat wait()
                                        AutoHaki()
                                        EquipTool(SelectWeapon)
                                        topos(v.HumanoidRootPart.CFrame * CFrame.new(0, 35, 0))
                                        if game:GetService("Workspace")["_WorldOrigin"]:FindFirstChild("Ring") or
                                        game:GetService("Workspace")["_WorldOrigin"]:FindFirstChild("Fist") then
                                            topos(v.HumanoidRootPart.CFrame * CFrame.new(0, 170, 0))
                                       else
                                        topos(v.HumanoidRootPart.CFrame * CFrame.new(0, 35, 0))
                                       end
                                    KillMonster(v.Name, true, FMode == "Farm Katakuri" and _G.MethodFarm == false)
                                    until not _G.MethodFarm or not v.Parent or v.Humanoid.Health <= 0 or not game.Workspace.Enemies:FindFirstChild(v.Name)
                                    end
                                    end
                                    end
                                end
                            end
                        end
                    else -- -2009.2802734375, 4532.97216796875, -14937.3076171875
                        topos(CongCake)
                    end
                else
                    local QuestTitle = game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text
                    if not string.find(QuestTitle, "Head Baker") then
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
                    end
                    if game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Visible == false then
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StartQuest", "CakeQuest2", 2)
                    elseif game.Workspace.Enemies:FindFirstChild("Baking Staff") or game.Workspace.Enemies:FindFirstChild("Head Baker") or game.Workspace.Enemies:FindFirstChild("Cake Guard") or game.Workspace.Enemies:FindFirstChild("Cookie Crafter")  then
                        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do  
                            if (v.Name == "Baking Staff" or v.Name == "Head Baker" or v.Name == "Cake Guard" or v.Name == "Cookie Crafter") and v.Humanoid.Health > 0 then
                                repeat wait()
                                    AutoHaki()
                                    EquipTool(SelectWeapon) 
                                    topos(v.HumanoidRootPart.CFrame * CFrame.new(0, 30, 0))
                                    KillMonster(v.Name, true, FMode == "Farm Katakuri" and _G.MethodFarm == false)
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner", true)
                                until _G.MethodFarm == false or game:GetService("ReplicatedStorage"):FindFirstChild("Cake Prince") or not v.Parent or v.Humanoid.Health <= 0 or game:GetService("Workspace").Map.CakeLoaf.BigMirror.Other.Transparency == 0
                            end
                        end
                    else
                        topos(CakeCFrame)
                    end
                end
            end)
        end
    end
end)